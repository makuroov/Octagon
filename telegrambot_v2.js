const TelegramBot = require('node-telegram-bot-api');
const token = '6970104134:AAFafIkauKbTLpjCfI8KB7qqVxxL5LbrGCg';
const bot = new TelegramBot(token, {polling: true});

const mysql = require('mysql2');
const connection = mysql.createConnection({
  host: 'localhost',
  user: 'root',
  password: '',
  database: 'chatbottests'
});
connection.connect();

console.log('Bot has been started ....')

bot.setMyCommands([
  {command: '/start', description: '–ù–∞—á–∞–ª–æ –¥–∏–∞–ª–æ–≥–∞'},
  {command: '/menu', description: '–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥'},
  {command: '/help', description: '–ü—Ä–∞–≤–∏–ª–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥ –¥–ª—è –ë–î'},
  {command: '/site', description: '–°—Å—ã–ª–∫–∞ –Ω–∞ –û–∫—Ç–∞–≥–æ–Ω'},
  {command: '/creator', description: '–ú–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å'},
  {command: '/view', description: '–ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –ë–î'},
  {command: '/add', description: '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ë–î'},
  {command: '/delete', description: '–£–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ë–î'},
  {command: '/webshot', description: '–°–∫—Ä–∏–Ω—à–æ—Ç —Å–∞–π—Ç–∞'},
  {command: '/qr', description: '–ü–æ–ª—É—á–µ–Ω–∏–µ QR-–ö–æ–¥–∞ —Å–∞–π—Ç–∞'},
])

bot.onText(/\/start/, async (msg) => 
{
  console.log(msg);
  const chatId = msg.chat.id;
  await bot.sendSticker(chatId, 'https://tlgrm.ru/_/stickers/4dd/300/4dd300fd-0a89-3f3d-ac53-8ec93976495e/29.webp');
  await bot.sendMessage(chatId, `–ü—Ä–∏–≤–µ—Ç, ${msg.from.first_name}! –ú–µ–Ω—è –∑–æ–≤—É—Ç –¶–µ—Ä–±–µ—Ä :)\n–í—Å–µ –∫–æ–º–∞–Ω–¥—ã —Ç—ã –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ —Å—Å—ã–ª–∫–µ /menu`);
})

bot.onText(/\/menu/, async (msg) => 
{
  console.log(msg);
  const chatId = msg.chat.id;
  await bot.sendMessage(chatId, '–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –º–æ–∏—Ö –∫–æ–º–∞–Ω–¥: \n\n–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n/start - –ù–∞—á–∞–ª–æ –¥–∏–∞–ª–æ–≥–∞;\n/menu - –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥;\n/help - –ü—Ä–∞–≤–∏–ª–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥ –ë–î;\n/site - –°—Å—ã–ª–∫–∞ –Ω–∞ –û–∫—Ç–∞–≥–æ–Ω;\n/creator - –ú–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å;\n/webshot - –°–∫—Ä–∏–Ω—à–æ—Ç —Å–∞–π—Ç–∞;\n/qr - –ü–æ–ª—É—á–µ–Ω–∏–µ QR-–ö–æ–¥–∞ —Å–∞–π—Ç–∞;\n\n–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –ë–î:\n/view - –ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö;\n/add - –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö;\n/delete - –£–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö;');
})

bot.onText(/\/help/, async (msg) => 
{
  console.log(msg);
  const chatId = msg.chat.id;
  await bot.sendMessage(chatId, '–ß—Ç–æ–±—ã –∑–∞–ø–æ–ª–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–º–∏ —Ç–∞–±–ª–∏—Ü—É, –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—É [/add TEXT, TEXT]\n–ì–¥–µ TEXT - –≤–∞—à–∏ –≤–≤–µ–¥—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
  await bot.sendMessage(chatId, '–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å –∏–∑ —Ç–∞–±–ª–∏—Ü—ã, –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—É [/delete ID]\n–ì–¥–µ ID - –Ω–æ–º–µ—Ä –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ');
})

bot.onText(/\/site/, async (msg) => 
{
  console.log(msg);
  const chatId = msg.chat.id;
  await bot.sendMessage(chatId, '–í–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –ª—É—á—à–∏–π —Å–∞–π—Ç –≤ –º–∏—Ä–µ: https://students.forus.ru/');
})

bot.onText(/\/creator/, async (msg) => 
{
  console.log(msg);
  const chatId = msg.chat.id;
  await bot.sendMessage(chatId, '–ú–æ–µ–≥–æ —Å–æ–∑–¥–∞—Ç–µ–ª—è –∑–æ–≤—É—Ç:\n–ú–∞–∫—É—Ä–æ–≤ –í–ª–∞–¥–∏–º–∏—Ä –ê–ª–µ–∫—Å–µ–µ–≤–∏—á\n@makuroov');
})

bot.onText(/\/view/, (msg) => 
{
  console.log(msg);
  const chatId = msg.chat.id;
  connection.query("SELECT * FROM `items`", (error, results, fields) => 
  {
    bot.sendMessage(chatId, '–î–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã: ' + JSON.stringify(results));
  });
});

bot.onText(/\/add (.+), (.+)/, (msg, match) => 
{
  console.log(msg);
  const chatId = msg.chat.id;
  const name = match[1];
  const desc = match[2];
  connection.query("INSERT INTO `items` (`Name`, `Desc`) VALUES (?, ?)", [name, desc], (error, results, fields) => 
  {
    bot.sendMessage(chatId, '–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã');
  });
});

bot.onText(/\/delete (.+)/, (msg, match) => 
{
  console.log(msg);
  const chatId = msg.chat.id;
  const id = match[1];  
  connection.query("DELETE FROM `items` WHERE ID = ?", [id], (error, results, fields) => 
  {
    if (results.affectedRows > 0) 
    {
      bot.sendMessage(chatId, '–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã');
    } 
    else 
    {
      bot.sendMessage(chatId, '–û—à–∏–±–∫–∞! –¢–∞–∫–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ!');
    }
  });
});

bot.onText(/^\/webshot/, async function(msg) 
{
  console.log(msg);
  const userId = msg.from.id;
  const url = msg.text.substring(8).trim();
  const image = "https://api.letsvalidate.com/v1/thumbs/?url=" + url + "&width=1280&height=720";
  await bot.sendMessage(msg.chat.id, "[üì∑](" + image + ") Website screenshot: " + url, {parse_mode : "Markdown"});
});

bot.onText(/^\/qr/, async function(msg) 
{
  console.log(msg);
  const userId = msg.from.id;
  const data = msg.text.substring(3).trim();
  const imageqr = "https://api.qrserver.com/v1/create-qr-code/?size=250x250&data=" + data;
  await bot.sendMessage(msg.chat.id, "[‚úèÔ∏è](" + imageqr + ") QR code: " + data, {parse_mode : "Markdown"});
});